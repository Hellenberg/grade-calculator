{"version":3,"sources":["CalculatedGrade.js","educations.js","App.js","serviceWorker.js","index.js"],"names":["CalculatedGrade","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","Math","round","props","grade","alt","type","min","max","meritPoints","onChange","handleMeritPointsChange","totalGrade","Component","educations","Naturvetenskapsprogrammet","name","points","required","Samhällsvetenskapsprogrammet","Course","_this","course","handleCourseChange","onClick","delete","Courses","_this2","call","educationData","courses","console","log","state","selected","calculatedGrade","handleEducationChange","bind","assertThisInitialized","calculateGrade","renderCalculatedGrade","i","alert","splice","setState","event","parseFloat","target","isNaN","education","newCourses","slice","push","_this3","App_Course","_this4","map","index","renderCourse","totalPoints","totalGradePoints","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","_this5","CalculatedGrade_CalculatedGrade","_this6","keys","renderCourses","addCourse","App","App_Courses","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qPAGaA,eAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAGQ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wCACwBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcC,KAAKC,MAAyB,GAAnBd,KAAKe,MAAMC,OAAc,MAG9FP,EAAAC,EAAAC,cAAA,yCAEIF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeK,IAAI,iBAAcC,KAAK,SAASC,IAAI,IAAIC,IAAI,MAAMZ,MAAOR,KAAKe,MAAMM,YAAaC,SAAUtB,KAAKe,MAAMQ,2BAE1Id,EAAAC,EAAAC,cAAA,8CAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACNC,KAAKC,MAA8B,GAAxBd,KAAKe,MAAMS,YAAmB,UAjBlE5B,EAAA,CAAqC6B,cCHtBC,EAAA,CACXC,0BAA6B,CACzB,CACIC,KAAQ,aACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,aACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,cACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,wBACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,eACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,eACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,eACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,qBACRC,OAAU,GACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,wBACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,YACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,YACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,YACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,YACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,SACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,WACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,mBACRC,OAAU,IACVb,MAAS,IACTc,UAAY,IAGpBC,kCAAgC,CAC5B,CACIH,KAAQ,aACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,aACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,cACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,wBACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,eACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,eACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,kBACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,qBACRC,OAAU,GACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,wBACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,0CACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,0CACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,0CACRC,OAAU,IACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,aACRC,OAAU,GACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,cACRC,OAAU,GACVb,MAAS,IACTc,UAAY,GAEhB,CACIF,KAAQ,mBACRC,OAAU,IACVb,MAAS,IACTc,UAAY,KCtLlBE,mLACO,IAAAC,EAAAjC,KACL,OACIS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOM,IAAI,WAAWL,UAAU,OAAOM,KAAK,OAAOV,MAAOR,KAAKe,MAAMmB,OAAON,KAAMN,SAAUtB,KAAKe,MAAMoB,sBAC5G1B,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOM,IAAI,iBAAcC,KAAK,SAASC,IAAI,IAAIC,IAAI,MAAMZ,MAAOR,KAAKe,MAAMmB,OAAOL,OAAQP,SAAUtB,KAAKe,MAAMoB,sBACpH1B,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAQiB,KAAK,QAAQpB,MAAOR,KAAKe,MAAMmB,OAAOlB,MAAOM,SAAUtB,KAAKe,MAAMoB,oBAC3E1B,EAAAC,EAAAC,cAAA,UAAQH,MAAM,KAAd,KACAC,EAAAC,EAAAC,cAAA,UAAQH,MAAM,KAAd,KACAC,EAAAC,EAAAC,cAAA,UAAQH,MAAM,KAAd,KACAC,EAAAC,EAAAC,cAAA,UAAQH,MAAM,KAAd,KACAC,EAAAC,EAAAC,cAAA,UAAQH,MAAM,KAAd,KACAC,EAAAC,EAAAC,cAAA,UAAQH,MAAM,KAAd,OAGJC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAgBwB,QAAS,kBAAMH,EAAKlB,MAAMsB,WAAU5B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oCAhBlFa,aAuBfa,cACF,SAAAA,EAAYvB,GAAO,IAAAwB,EAAAzC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsC,IACfC,EAAAzC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwC,GAAAE,KAAAxC,KAAMe,KACDW,WAAae,EAClB,IAAMC,EAAUH,EAAKb,WAAL,0BAHD,OAIfiB,QAAQC,IAAIL,EAAKb,WAAW,IAC5BiB,QAAQC,IAAIF,GACZH,EAAKM,MAAQ,CACTH,QAASA,EACTI,SAAU,4BACVC,iBAAiB,EACjB1B,YAAa,EACbG,WAAY,GAEhBe,EAAKS,sBAAwBT,EAAKS,sBAAsBC,KAA3BnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAAyC,KAC7BA,EAAKJ,mBAAqBI,EAAKJ,mBAAmBc,KAAxBnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAAyC,KAC1BA,EAAKhB,wBAA0BgB,EAAKhB,wBAAwB0B,KAA7BnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAAyC,KAC/BA,EAAKY,eAAiBZ,EAAKY,eAAeF,KAApBnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAAyC,KACtBA,EAAKa,sBAAwBb,EAAKa,sBAAsBH,KAA3BnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAAyC,KAjBdA,sEAoBZc,GACH,IAAMX,EAAU1C,KAAK6C,MAAMH,QACvBA,EAAQW,GAAGvB,UACXwB,MAAM,gGAEVZ,EAAQa,OAAOF,EAAG,GAClBrD,KAAKwD,SAAS,CAAEd,QAASA,oDAGLe,GACpB,IAAIpC,EAAcqC,WAAWD,EAAME,OAAOnD,OACtCa,EAAc,GAAKuC,MAAMvC,GACzBA,EAAc,GACPA,EAAc,MACrBA,EAAc,KAElBrB,KAAKwD,SAAS,CACVnC,YAAaA,mDAGEoC,GACnB,IAAMpC,EAAcqC,WAAWD,EAAME,OAAOnD,OACtCgB,EAAaH,EAAcrB,KAAK6C,MAAME,gBAC5CJ,QAAQC,IAAI,WAAYpB,GACxBxB,KAAKwD,SAAS,CACVnC,YAAaA,EACbG,WAAYA,kDAIEiC,GAClB,IAAMI,EAAYJ,EAAME,OAAOnD,MACzBsD,EAAa9D,KAAK0B,WAAWmC,GACnClB,QAAQC,IAAIkB,GACZ9D,KAAKwD,SAAS,CACVd,QAASoB,EACThB,SAAUW,EAAME,OAAOnD,mDAIZiD,EAAOJ,GACtB,IAAMX,EAAU1C,KAAK6C,MAAMH,QAAQqB,QAC7B7B,EAASQ,EAAQW,GAEnBnB,EAAOJ,UAAkC,UAAtB2B,EAAME,OAAO/B,KAChC0B,MAAM,yEAIe,mBAArBG,EAAME,OAAO1C,IACbiB,EAAOL,OAAS4B,EAAME,OAAOnD,MAEH,aAArBiD,EAAME,OAAO1C,IAClBiB,EAAON,KAAO6B,EAAME,OAAOnD,MAEA,UAAtBiD,EAAME,OAAO/B,OAClBM,EAAOlB,MAAQyC,EAAME,OAAOnD,OAGhCkC,EAAQW,GAAKnB,EACblC,KAAKwD,SAAS,CAAEd,QAASA,yCAIzB,IAAMA,EAAU1C,KAAK6C,MAAMH,QAAQqB,QAOnCrB,EAAQsB,KANO,CACXpC,KAAM,WACNC,OAAQ,IACRb,MAAO,IACPc,UAAU,IAGd9B,KAAKwD,SAAS,CAAEd,QAASA,yCAIhBW,GAAG,IAAAY,EAAAjE,KACZ,OAAOS,EAAAC,EAAAC,cAACuD,EAAD,CACHhC,OAAQlC,KAAK6C,MAAMH,QAAQW,GAC3BhB,OAAQ,kBAAM4B,EAAK5B,OAAOgB,IAC1BlB,mBAAoB,SAACsB,GAAD,OAAWQ,EAAK9B,mBAAmBsB,EAAOJ,8CAItD,IAAAc,EAAAnE,KACZ,OACIS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,uBAGAF,EAAAC,EAAAC,cAAA,uBAGAF,EAAAC,EAAAC,cAAA,qBAIHX,KAAK6C,MAAMH,QAAQ0B,IAAI,SAACxC,EAAMyC,GAC3B,OAAO5D,EAAAC,EAAAC,cAAA,OAAKJ,IAAK8D,GAAQF,EAAKG,aAAaD,gDAMvD,IAAIE,EAAc,EACdC,EAAmB,EAFVC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGb,QAAAC,EAAAC,EAAmB9E,KAAK6C,MAAMH,QAA9BqC,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAuC,KAA9BvC,EAA8B2C,EAAArE,MAEnC,OADA+D,GAAerC,EAAOL,OACdK,EAAOlB,OACX,IAAK,IACDwD,GAAoC,GAAhBtC,EAAOL,OAC3B,MACJ,IAAK,IACD2C,GAAoC,KAAhBtC,EAAOL,OAC3B,MACJ,IAAK,IACD2C,GAAoC,GAAhBtC,EAAOL,OAC3B,MACJ,IAAK,IACD2C,GAAoC,KAAhBtC,EAAOL,OAC3B,MACJ,IAAK,IACD2C,GAAoC,GAAhBtC,EAAOL,OAC3B,MACJ,QACI2C,GAAoC,EAAhBtC,EAAOL,SAtB1B,MAAAsD,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAK,EAAAM,QAAAN,EAAAM,SAAA,WAAAV,EAAA,MAAAC,GA0Bb,IAAM3D,EAAQwD,EAAmBD,EACjC5B,QAAQC,IAAI,QAAS5C,KAAK6C,MAAMxB,aAChC,IAAMG,EAAaR,EAAQhB,KAAK6C,MAAMxB,YACtCrB,KAAKwD,SAAS,CACVT,gBAAiB/B,EACjBQ,WAAYA,oDAGI,IAAA6D,EAAArF,KACpB,OAAmC,IAA/BA,KAAK6C,MAAME,gBACHtC,EAAAC,EAAAC,cAAC2E,EAAD,CACJtE,MAAOhB,KAAK6C,MAAME,gBAClB1B,YAAarB,KAAK6C,MAAMxB,YACxBG,WAAYxB,KAAK6C,MAAMrB,WACvBD,wBAAyB,SAACkC,GAAD,OAAW4B,EAAK9D,wBAAwBkC,WAGrE,mCAGC,IAAA8B,EAAAvF,KACL,OACIS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,8BAEIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBJ,MAAOR,KAAK6C,MAAMC,SAAUxB,SAAUtB,KAAKgD,uBAC5ElD,OAAO0F,KAAKxF,KAAK0B,YAAY0C,IAAI,SAACxC,EAAMyC,GACrC,OAAO5D,EAAAC,EAAAC,cAAA,UAAQJ,IAAK8D,EAAO7D,MAAOoB,GAAOA,OAIrDnB,EAAAC,EAAAC,cAAA,WACKX,KAAKyF,iBAEVhF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0BAA0BwB,QAAS,kBAAMmD,EAAKG,cAAajF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAE9FH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBwB,QAASpC,KAAKmD,gBAAvD,6BAEJ1C,EAAAC,EAAAC,cAAA,WACKX,KAAKoD,kCAlMR3B,aAoNPkE,mLARP,OACIlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACiF,EAAD,cAJEnE,aC7NEoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO1F,EAAAC,EAAAC,cAACyF,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.822af4b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './CalculatedGrade.css';\r\n\r\nexport class CalculatedGrade extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='calculatedGrade'>\r\n                <div>\r\n                    <div>\r\n                        Ditt meritvärde är: <span className='floatRight'>{Math.round(this.props.grade * 10) / 10}</span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    Lägg till meritpoäng:\r\n                    <input className='merit-points' alt='Antal poäng' type='number' min=\"0\" max=\"2.5\" value={this.props.meritPoints} onChange={this.props.handleMeritPointsChange}></input>\r\n                </div>\r\n                <div>\r\n                    Ditt totala meritvärde är:\r\n                <div className='floatRight'>\r\n                        {Math.round(this.props.totalGrade * 10) / 10}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n}","export default {\r\n    \"Naturvetenskapsprogrammet\": [\r\n        {\r\n            \"name\": \"Engelska 5\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": true\r\n        },\r\n        {\r\n            \"name\": \"Engelska 6\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Historia 1b\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Idrott och hälsa 1\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Matematik 1c\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Matematik 2c\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Matematik 3c\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Religionskunskap 1\",\r\n            \"points\": 50,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Samhällskunskap 1b\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Svenska 1\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Svenska 2\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Svenska 3\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Biologi 1\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Kemi 1\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Fysik 1a\",\r\n            \"points\": 150,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Moderna språk\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        }\r\n    ],\r\n    \"Samhällsvetenskapsprogrammet\": [\r\n        {\r\n            \"name\": \"Engelska 5\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": true\r\n        },\r\n        {\r\n            \"name\": \"Engelska 6\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Historia 1b\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Idrott och hälsa 1\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Matematik 1b\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": true\r\n        },\r\n        {\r\n            \"name\": \"Matematik 2b\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Naturkunskap 1b\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Religionskunskap 1\",\r\n            \"points\": 50,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Samhällskunskap 1b\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Svenska 1 / Svenska som andraspråk 1\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": true\r\n        },\r\n        {\r\n            \"name\": \"Svenska 2 / Svenska som andraspråk 2\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Svenska 3 / Svenska som andraspråk 3\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Filosofi 1\",\r\n            \"points\": 50,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Psykologi 1\",\r\n            \"points\": 50,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Moderna språk\",\r\n            \"points\": 200,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        }\r\n    ]\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport './App.css';\r\nimport {CalculatedGrade} from './CalculatedGrade';\r\nimport educationData from './educations';\r\n\r\nclass Course extends Component {\r\n    render() {\r\n        return (\r\n            <div className='course'>\r\n                <div><input alt='Kursnamn' className='name' type='text' value={this.props.course.name} onChange={this.props.handleCourseChange} /></div>\r\n                <div><input alt='Antal poäng' type='number' min=\"0\" max=\"200\" value={this.props.course.points} onChange={this.props.handleCourseChange} /></div>\r\n                <div><select name='Betyg' value={this.props.course.grade} onChange={this.props.handleCourseChange}>\r\n                    <option value='A'>A</option>\r\n                    <option value='B'>B</option>\r\n                    <option value='C'>C</option>\r\n                    <option value='D'>D</option>\r\n                    <option value='E'>E</option>\r\n                    <option value=\"F\">F</option>\r\n                </select>\r\n                </div>\r\n                <div>\r\n                    <button className='small-button'  onClick={() => this.props.delete()}><i className='item far fa-trash-alt'></i></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nclass Courses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.educations = educationData;\r\n        const courses = this.educations['Naturvetenskapsprogrammet'];\r\n        console.log(this.educations[0])\r\n        console.log(courses);\r\n        this.state = {\r\n            courses: courses,\r\n            selected: 'Naturvetenskapsprogrammet',\r\n            calculatedGrade: false,\r\n            meritPoints: 0,\r\n            totalGrade: 0\r\n        };\r\n        this.handleEducationChange = this.handleEducationChange.bind(this);\r\n        this.handleCourseChange = this.handleCourseChange.bind(this);\r\n        this.handleMeritPointsChange = this.handleMeritPointsChange.bind(this);\r\n        this.calculateGrade = this.calculateGrade.bind(this);\r\n        this.renderCalculatedGrade = this.renderCalculatedGrade.bind(this);\r\n    }\r\n\r\n    delete(i) {\r\n        const courses = this.state.courses;\r\n        if (courses[i].required) {\r\n            alert('Notera att du behöver vara godkänd i kursen för att få högskolebehörighet!');\r\n        }\r\n        courses.splice(i, 1);\r\n        this.setState({ courses: courses });\r\n    }\r\n\r\n    handleMeritPointsChange(event) {\r\n        let meritPoints = parseFloat(event.target.value);\r\n        if (meritPoints < 0 || isNaN(meritPoints)) {\r\n            meritPoints = '';\r\n        } else if (meritPoints > 2.5) {\r\n            meritPoints = 2.5;\r\n        }\r\n        this.setState({\r\n            meritPoints: meritPoints,\r\n        });\r\n    }\r\n    handleTotalGradeUpdate(event) {\r\n        const meritPoints = parseFloat(event.target.value);\r\n        const totalGrade = meritPoints + this.state.calculatedGrade;\r\n        console.log('totalt: ', totalGrade);\r\n        this.setState({\r\n            meritPoints: meritPoints,\r\n            totalGrade: totalGrade\r\n        });\r\n    }\r\n\r\n    handleEducationChange(event) {\r\n        const education = event.target.value;\r\n        const newCourses = this.educations[education];\r\n        console.log(newCourses);\r\n        this.setState({\r\n            courses: newCourses,\r\n            selected: event.target.value\r\n        });\r\n    }\r\n\r\n    handleCourseChange(event, i) {\r\n        const courses = this.state.courses.slice();\r\n        const course = courses[i]\r\n\r\n        if (course.required && event.target.name !== 'Betyg') {\r\n            alert('Kursen är obligatorisk för att få högskolebehörighet!');\r\n            return;\r\n        }\r\n\r\n        if (event.target.alt === 'Antal poäng') {\r\n            course.points = event.target.value;\r\n        }\r\n        else if (event.target.alt === 'Kursnamn') {\r\n            course.name = event.target.value;\r\n        }\r\n        else if (event.target.name === 'Betyg') {\r\n            course.grade = event.target.value;\r\n        }\r\n\r\n        courses[i] = course;\r\n        this.setState({ courses: courses });\r\n    }\r\n\r\n    addCourse() {\r\n        const courses = this.state.courses.slice();\r\n        const course = {\r\n            name: 'Kursnamn',\r\n            points: 100,\r\n            grade: 'F',\r\n            required: false,\r\n        };\r\n        courses.push(course);\r\n        this.setState({ courses: courses });\r\n    }\r\n\r\n\r\n    renderCourse(i) {\r\n        return <Course\r\n            course={this.state.courses[i]}\r\n            delete={() => this.delete(i)}\r\n            handleCourseChange={(event) => this.handleCourseChange(event, i)}\r\n        />\r\n    }\r\n\r\n    renderCourses() {\r\n        return (\r\n            <div className='coursesGrid'>\r\n                <div className='course course-heading'>\r\n                    <div>\r\n                        Kursnamn\r\n                    </div>\r\n                    <div>\r\n                        Poäng\r\n                    </div>\r\n                    <div>\r\n                        Betyg\r\n                    </div>\r\n                </div>\r\n                {this.state.courses.map((name, index) => {\r\n                    return <div key={index}>{this.renderCourse(index)}</div>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n    calculateGrade() {\r\n        let totalPoints = 0;\r\n        let totalGradePoints = 0;\r\n        for (let course of this.state.courses) {\r\n            totalPoints += course.points;\r\n            switch (course.grade) {\r\n                case 'A':\r\n                    totalGradePoints += course.points * 20;\r\n                    break;\r\n                case 'B':\r\n                    totalGradePoints += course.points * 17.5;\r\n                    break;\r\n                case 'C':\r\n                    totalGradePoints += course.points * 15;\r\n                    break;\r\n                case 'D':\r\n                    totalGradePoints += course.points * 12.5;\r\n                    break;\r\n                case 'E':\r\n                    totalGradePoints += course.points * 10;\r\n                    break;\r\n                default:\r\n                    totalGradePoints += course.points * 0;\r\n                    break;\r\n            }\r\n        }\r\n        const grade = totalGradePoints / totalPoints;\r\n        console.log('merit', this.state.meritPoints);\r\n        const totalGrade = grade + this.state.meritPoints;\r\n        this.setState({ \r\n            calculatedGrade: grade,\r\n            totalGrade: totalGrade\r\n         });\r\n    }\r\n    renderCalculatedGrade() {\r\n        if (this.state.calculatedGrade !== false) {\r\n            return (<CalculatedGrade\r\n                grade={this.state.calculatedGrade}\r\n                meritPoints={this.state.meritPoints}\r\n                totalGrade={this.state.totalGrade}\r\n                handleMeritPointsChange={(event) => this.handleMeritPointsChange(event)}\r\n            />)\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='center'>\r\n                    <div className=\"grid card\">\r\n                    <div>\r\n                        Välj program:\r\n                        <select className='margin floatRight' value={this.state.selected} onChange={this.handleEducationChange}>\r\n                            {Object.keys(this.educations).map((name, index) => {\r\n                                return <option key={index} value={name}>{name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        {this.renderCourses()}\r\n                    </div>\r\n                    <div>\r\n                        <button className='small-button floatRight' onClick={() => this.addCourse()}><i className=\"fas fa-plus\"></i></button>\r\n                    </div>\r\n                    <div>\r\n                        <hr></hr>\r\n                        <button className='calculate floatRight' onClick={this.calculateGrade}>Beräkna meritvärde</button>\r\n                    </div>\r\n                    <div>\r\n                        {this.renderCalculatedGrade()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <Courses />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}