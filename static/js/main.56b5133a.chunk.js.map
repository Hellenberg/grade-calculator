{"version":3,"sources":["CalculatedGrade.js","educations.js","App.js","serviceWorker.js","index.js"],"names":["CalculatedGrade","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","isQualified","react_default","a","createElement","className","renderIsQualified","props","passedPoints","Math","round","grade","totalGrade","Component","educations","Naturvetenskapsprogrammet","name","points","required","Samhällsvetenskapsprogrammet","Course","_this","alt","type","course","onChange","handleCourseChange","min","max","onClick","delete","Courses","_this2","call","educationData","courses","console","log","state","selected","calculatedGrade","meritPoints","handleEducationChange","bind","assertThisInitialized","handleMeritPointsChange","calculateGrade","renderCalculatedGrade","i","alert","splice","setState","event","parseFloat","target","isNaN","education","newCourses","slice","Number","push","_this3","App_Course","_this4","map","index","renderCourse","totalPoints","totalGradePoints","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","CalculatedGrade_CalculatedGrade","_this5","keys","renderCourses","addCourse","App","App_Courses","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56b5133a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './CalculatedGrade.css';\r\n\r\nexport class CalculatedGrade extends Component {\r\n\r\n\r\n    renderIsQualified(isQualified) {\r\n        if (isQualified) {\r\n            return\r\n        } else {\r\n            return (\r\n                <div className='danger'>\r\n                    <p>\r\n                        <strong>OBS!</strong> <br></br>\r\n                        Du är ej behörig för vidare studier. <br></br>\r\n                        För att nå en högskoleförberedande examen ska du ha minst 90 procent godkända betyg på en utbildning som omfattar 2500 gymnasiepoäng. Betygen i kurserna svenska/svenska som andraspråk 1, 2, 3, engelska 5, 6 och matematik 1 samt gymnasiearbetet ska vara godkända. En högskoleförberedande examen ger grundläggande behörighet till högskoleutbildning på grundnivå.\r\n                    </p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='calculatedGrade'>\r\n                <div>\r\n                    {this.renderIsQualified(this.props.isQualified)}\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        Klarade gymnasiepoäng:  <span className='floatRight'>{this.props.passedPoints}</span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        Ditt jämförelsetal är: <span className='floatRight'>{Math.round(this.props.grade * 10) / 10}</span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    Ditt totala meritvärde är:\r\n                <div className='floatRight'>\r\n                        {Math.round(this.props.totalGrade * 10) / 10}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n}","export default {\r\n    \"Naturvetenskapsprogrammet\": [\r\n        {\r\n            \"name\": \"Engelska 5\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": true\r\n        },\r\n        {\r\n            \"name\": \"Engelska 6\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Historia 1b\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Idrott och hälsa 1\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Matematik 1c\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": true\r\n        },\r\n        {\r\n            \"name\": \"Matematik 2c\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Matematik 3c\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Religionskunskap 1\",\r\n            \"points\": 50,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Samhällskunskap 1b\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Svenska 1 / Svenska som andraspråk 1\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": true\r\n        },\r\n        {\r\n            \"name\": \"Svenska 2 / Svenska som andraspråk 2\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Svenska 3 / Svenska som andraspråk 3\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Biologi 1\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Kemi 1\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Fysik 1a\",\r\n            \"points\": 150,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Moderna språk\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        }\r\n    ],\r\n    \"Samhällsvetenskapsprogrammet\": [\r\n        {\r\n            \"name\": \"Engelska 5\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": true\r\n        },\r\n        {\r\n            \"name\": \"Engelska 6\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Historia 1b\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Idrott och hälsa 1\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Matematik 1b\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": true\r\n        },\r\n        {\r\n            \"name\": \"Matematik 2b\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Naturkunskap 1b\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Religionskunskap 1\",\r\n            \"points\": 50,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Samhällskunskap 1b\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Svenska 1 / Svenska som andraspråk 1\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": true\r\n        },\r\n        {\r\n            \"name\": \"Svenska 2 / Svenska som andraspråk 2\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Svenska 3 / Svenska som andraspråk 3\",\r\n            \"points\": 100,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Filosofi 1\",\r\n            \"points\": 50,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Psykologi 1\",\r\n            \"points\": 50,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        },\r\n        {\r\n            \"name\": \"Moderna språk\",\r\n            \"points\": 200,\r\n            \"grade\": \"F\",\r\n            \"required\": false\r\n        }\r\n    ]\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport './App.css';\r\nimport { CalculatedGrade } from './CalculatedGrade';\r\nimport educationData from './educations';\r\n\r\nclass Course extends Component {\r\n    render() {\r\n        return (\r\n            <div className='course'>\r\n                <div><input alt='Kursnamn' className='name' type='text' value={this.props.course.name} onChange={this.props.handleCourseChange} /></div>\r\n                <div><input alt='Antal poäng' type='number' min=\"0\" max=\"200\" value={this.props.course.points} onChange={this.props.handleCourseChange} /></div>\r\n                <div><select name='Betyg' value={this.props.course.grade} onChange={this.props.handleCourseChange}>\r\n                    <option value='A'>A</option>\r\n                    <option value='B'>B</option>\r\n                    <option value='C'>C</option>\r\n                    <option value='D'>D</option>\r\n                    <option value='E'>E</option>\r\n                    <option value=\"F\">F</option>\r\n                </select>\r\n                </div>\r\n                <div>\r\n                    <button className='small-button' onClick={() => this.props.delete()}><i className='item far fa-trash-alt'></i></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nclass Courses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.educations = educationData;\r\n        const courses = this.educations['Naturvetenskapsprogrammet'];\r\n        console.log(this.educations[0])\r\n        console.log(courses);\r\n        this.state = {\r\n            courses: courses,\r\n            selected: 'Naturvetenskapsprogrammet',\r\n            calculatedGrade: false,\r\n            meritPoints: 0,\r\n            totalGrade: 0,\r\n            isQualified: false,\r\n            passedPoints: 0\r\n        };\r\n        this.handleEducationChange = this.handleEducationChange.bind(this);\r\n        this.handleCourseChange = this.handleCourseChange.bind(this);\r\n        this.handleMeritPointsChange = this.handleMeritPointsChange.bind(this);\r\n        this.calculateGrade = this.calculateGrade.bind(this);\r\n        this.renderCalculatedGrade = this.renderCalculatedGrade.bind(this);\r\n    }\r\n\r\n    delete(i) {\r\n        const courses = this.state.courses;\r\n        if (courses[i].required) {\r\n            alert('Notera att du behöver vara godkänd i kursen för att få högskolebehörighet!');\r\n        }\r\n        courses.splice(i, 1);\r\n        this.setState({ courses: courses });\r\n    }\r\n\r\n    handleMeritPointsChange(event) {\r\n        let meritPoints = parseFloat(event.target.value);\r\n        if (meritPoints < 0 || isNaN(meritPoints)) {\r\n            meritPoints = '';\r\n        } else if (meritPoints > 2.5) {\r\n            meritPoints = 2.5;\r\n        }\r\n        this.setState({\r\n            meritPoints: meritPoints,\r\n        });\r\n    }\r\n    handleTotalGradeUpdate(event) {\r\n        const meritPoints = parseFloat(event.target.value);\r\n        const totalGrade = meritPoints + this.state.calculatedGrade;\r\n        console.log('totalt: ', totalGrade);\r\n        this.setState({\r\n            meritPoints: meritPoints,\r\n            totalGrade: totalGrade\r\n        });\r\n    }\r\n\r\n    handleEducationChange(event) {\r\n        const education = event.target.value;\r\n        const newCourses = this.educations[education];\r\n        console.log(newCourses);\r\n        this.setState({\r\n            courses: newCourses,\r\n            selected: event.target.value\r\n        });\r\n    }\r\n\r\n    handleCourseChange(event, i) {\r\n        const courses = this.state.courses.slice();\r\n        const course = courses[i]\r\n\r\n        if (course.required && event.target.name !== 'Betyg') {\r\n            alert('Kursen är obligatorisk för att få högskolebehörighet!');\r\n            return;\r\n        }\r\n\r\n        if (event.target.alt === 'Antal poäng') {\r\n            course.points = Number(event.target.value);\r\n        }\r\n        else if (event.target.alt === 'Kursnamn') {\r\n            course.name = event.target.value;\r\n        }\r\n        else if (event.target.name === 'Betyg') {\r\n            course.grade = event.target.value;\r\n        }\r\n\r\n        courses[i] = course;\r\n        this.setState({ courses: courses });\r\n    }\r\n\r\n    addCourse() {\r\n        const courses = this.state.courses.slice();\r\n        const course = {\r\n            name: 'Kursnamn',\r\n            points: 100,\r\n            grade: 'F',\r\n            required: false,\r\n        };\r\n        courses.push(course);\r\n        this.setState({ courses: courses });\r\n    }\r\n\r\n\r\n    renderCourse(i) {\r\n        return <Course\r\n            course={this.state.courses[i]}\r\n            delete={() => this.delete(i)}\r\n            handleCourseChange={(event) => this.handleCourseChange(event, i)}\r\n        />\r\n    }\r\n\r\n    renderCourses() {\r\n        return (\r\n            <div className='coursesGrid'>\r\n                <div className='course course-heading'>\r\n                    <div>\r\n                        Kursnamn\r\n                    </div>\r\n                    <div>\r\n                        Poäng\r\n                    </div>\r\n                    <div>\r\n                        Betyg\r\n                    </div>\r\n                </div>\r\n                {this.state.courses.map((name, index) => {\r\n                    return <div key={index}>{this.renderCourse(index)}</div>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n    calculateGrade() {\r\n        let totalPoints = 0;\r\n        let totalGradePoints = 0;\r\n        let isQualified = true;\r\n        let passedPoints = 0;\r\n        for (let course of this.state.courses) {\r\n            totalPoints += course.points;\r\n            switch (course.grade) {\r\n                case 'A':\r\n                    totalGradePoints += course.points * 20;\r\n                    passedPoints += course.points;\r\n                    break;\r\n                case 'B':\r\n                    totalGradePoints += course.points * 17.5;\r\n                    passedPoints += course.points;\r\n                    break;\r\n                case 'C':\r\n                    totalGradePoints += course.points * 15;\r\n                    passedPoints += course.points;\r\n                    break;\r\n                case 'D':\r\n                    totalGradePoints += course.points * 12.5;\r\n                    passedPoints += course.points;\r\n                    break;\r\n                case 'E':\r\n                    totalGradePoints += course.points * 10;\r\n                    passedPoints += course.points;\r\n                    break;\r\n                case 'F':\r\n                    if (course.required ) {\r\n                        isQualified = false;\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        const grade = totalGradePoints / totalPoints;\r\n        console.log('merit', this.state.meritPoints);\r\n        const totalGrade = grade + this.state.meritPoints;\r\n        console.log(this.state);\r\n        if(passedPoints < 0.9 * 2500){\r\n            isQualified = false;\r\n        }\r\n        this.setState({\r\n            calculatedGrade: grade,\r\n            totalGrade: totalGrade,\r\n            isQualified: isQualified,\r\n            passedPoints: passedPoints,\r\n        });\r\n    }\r\n    renderCalculatedGrade() {\r\n        if (this.state.calculatedGrade !== false) {\r\n            return (<CalculatedGrade\r\n                grade={this.state.calculatedGrade}\r\n                meritPoints={this.state.meritPoints}\r\n                totalGrade={this.state.totalGrade}\r\n                isQualified={this.state.isQualified}\r\n                passedPoints={this.state.passedPoints}\r\n            />)\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='center'>\r\n                <div className=\"grid card\">\r\n                    <div>\r\n                        Välj program:\r\n                        <select className='margin floatRight' value={this.state.selected} onChange={this.handleEducationChange}>\r\n                            {Object.keys(this.educations).map((name, index) => {\r\n                                return <option key={index} value={name}>{name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        {this.renderCourses()}\r\n                    </div>\r\n                    <div>\r\n                        <button className='small-button floatRight' onClick={() => this.addCourse()}><i className=\"fas fa-plus\"></i></button>\r\n                    </div>\r\n                    <div>\r\n                        Lägg till meritpoäng:\r\n                        <input className='merit-points' alt='Antal poäng' type='number' min=\"0\" max=\"2.5\" value={this.state.meritPoints} onChange={this.handleMeritPointsChange}></input>\r\n                    </div>\r\n                    <div>\r\n                        <hr></hr>\r\n                        <button className='calculate floatRight' onClick={this.calculateGrade}>Beräkna meritvärde</button>\r\n                    </div>\r\n                    <div>\r\n                        {this.renderCalculatedGrade()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <Courses />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}